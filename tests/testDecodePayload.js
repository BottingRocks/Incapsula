
const Payload = require("../incapsula/payload/payload.js");


const file = process.argv.slice(-2)[0];
const xor = process.argv.slice(-1)[0];
//Load payload AST, true if it needs deobfuscation
const payload = Payload.fromFile(file);

const encodedPayload = ``;

console.log(`decoded payload`, JSON.stringify(payload.decodePayload(encodedPayload, xor)));
